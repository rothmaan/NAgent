---
- name: Check if OS is RHEL 7, RHEL 8, or RHEL 9
  block:
    - name: Set OS version fact
      set_fact:
        os_version: "{{ ansible_distribution_major_version | int }}"

    - name: Fail if not RHEL 7, 8, or 9
      fail:
        msg: "This role only supports RHEL 7, RHEL 8, and RHEL 9"
      when: ansible_distribution != 'RedHat' or os_version not in [7, 8, 9]

- name: Check if NessusAgent is installed
  command: rpm -q NessusAgent
  register: nessus_installed
  failed_when: nessus_installed.rc not in [0,1]
  changed_when: false

- name: Get version of NessusAgent if installed
  command: rpm -q --queryformat '%{VERSION}' NessusAgent
  when: nessus_installed.rc == 0
  register: nessus_version
  changed_when: false

- name: Display version of NessusAgent
  debug:
    msg: "Installed version of NessusAgent is {{ nessus_version.stdout }}"
  when: nessus_installed.rc == 0

- name: Prompt user for upgrade decision
  pause:
    prompt: "Do you want to upgrade NessusAgent to version 10.6.4? (yes/no)"
  register: upgrade_decision
  when: nessus_installed.rc == 0

- name: Set upgrade decision
  set_fact:
    upgrade_needed: "{{ (upgrade_decision.user_input | lower) == 'yes' }}"
  when: nessus_installed.rc == 0

- name: Upgrade NessusAgent if user agreed
  block:
    - name: Copy the NessusAgent RPM from local files directory
      copy:
        src: "roles/upgrade_nessus_agent/files/NessusAgent-10.6.4-el{{ os_version }}.x86_64.rpm"
        dest: "/tmp/tenable/NessusAgent-10.6.4-el{{ os_version }}.x86_64.rpm"
      when: upgrade_needed

    - name: Upgrade NessusAgent using the RPM file
      yum:
        name: "/tmp/tenable/NessusAgent-10.6.4-el{{ os_version }}.x86_64.rpm"
        state: latest
        disable_gpg_check: yes
      when: upgrade_needed

    - name: Remove NessusAgent RPM from /tmp after installation
      file:
        path: "/tmp/tenable/NessusAgent-10.6.4-el{{ os_version }}.x86_64.rpm"
        state: absent
      when: upgrade_needed

    - name: Restart NessusAgent service
      ansible.builtin.service:
        name: nessusagent
        state: restarted
      when: upgrade_needed
